#Open Data and look for type of data
library(readxl)
ore <- read_excel("01-ORE.xlsx")

# Membagi data ke Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(ore$ORE, SplitRatio = 0.8)
training_set = subset(ore, split == TRUE)
test_set = subset(ore, split == FALSE)

#Membuat model MLR dengan Training set data
Regresi = lm(ORE~ActualCycleTime+ActualOperationTime+Available+
               BreakDuration+IdealCT+ManPower+Performance+PlanLT+
               PlannedDT+PlanOperation+QtyAC+QtyNC+Quality+TotalQty+
               UnplanDT, data=training_set)

#Memprediksi hasil test set
y_pred = predict(Regresi, newdata=test_set)

# Membandingkan y_pred dengan y_test
perbandingan = data.frame(y_pred,test_set$ORE)

#BackElimination Method
Regresi  = lm(formula = ORE~ActualCycleTime+ActualOperationTime+Available+
                BreakDuration+IdealCT+ManPower+Performance+PlanLT+
                PlannedDT+PlanOperation+QtyAC+QtyNC+Quality+TotalQty+
                UnplanDT, data=ore)
summary(Regresi)

Regresi = lm(formula = ORE~ActualCycleTime+Available+IdealCT+
               ManPower+Performance+PlanLT+PlannedDT+QtyAC,
             data = ore)
summary(Regresi)

Regresi = lm(formula=ORE~Available+IdealCT+Performance+
               PlanLT+PlannedDT+QtyAC,
             data = ore)
summary(Regresi)

#Backward Elimination
backwardElimination <- function(x,sl){
  numVars = length(x)
  for (i in c(1:numVars)){
    regressor = lm(formula = ORE~ActualCycleTime+
                     ActualOperationTime+Available+
                     BreakDuration+IdealCT+ManPower+
                     Performance+PlanLT+
                     PlannedDT+PlanOperation+QtyAC+QtyNC+
                     Quality+TotalQty+
                     UnplanDT, data=x)
    maxVar= max(coef(summary(regressor)))
    if (maxVar > sl){
      j = which(coef(summary(regressor)) == maxVar)
      x = x[, -j]
    }
    numVars = numVars - 1
  }
  return(summary(regressor))
}

SL = 0.05
ore = ore[, c(1,2,3,4,6,7,10,11,12,13,15,16,17,20,21)]
backwardElimination(training_set, SL)

predict(Regresi, data.frame(Level = 6.5))
